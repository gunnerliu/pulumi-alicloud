// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.inputs;

import com.pulumi.alicloud.alb.inputs.LoadBalancerAccessLogConfigArgs;
import com.pulumi.alicloud.alb.inputs.LoadBalancerLoadBalancerBillingConfigArgs;
import com.pulumi.alicloud.alb.inputs.LoadBalancerModificationProtectionConfigArgs;
import com.pulumi.alicloud.alb.inputs.LoadBalancerZoneMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerState extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerState Empty = new LoadBalancerState();

    /**
     * The Access Logging Configuration Structure. See the following `Block access_log_config`.
     * 
     */
    @Import(name="accessLogConfig")
    private @Nullable Output<LoadBalancerAccessLogConfigArgs> accessLogConfig;

    /**
     * @return The Access Logging Configuration Structure. See the following `Block access_log_config`.
     * 
     */
    public Optional<Output<LoadBalancerAccessLogConfigArgs>> accessLogConfig() {
        return Optional.ofNullable(this.accessLogConfig);
    }

    /**
     * The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
     * 
     */
    @Import(name="addressAllocatedMode")
    private @Nullable Output<String> addressAllocatedMode;

    /**
     * @return The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
     * 
     */
    public Optional<Output<String>> addressAllocatedMode() {
        return Optional.ofNullable(this.addressAllocatedMode);
    }

    /**
     * The IP version. Valid values: `Ipv4`, `DualStack`.
     * 
     */
    @Import(name="addressIpVersion")
    private @Nullable Output<String> addressIpVersion;

    /**
     * @return The IP version. Valid values: `Ipv4`, `DualStack`.
     * 
     */
    public Optional<Output<String>> addressIpVersion() {
        return Optional.ofNullable(this.addressIpVersion);
    }

    /**
     * The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`. **NOTE:** From version 1.193.1, `address_type` can be modified.
     * 
     */
    @Import(name="addressType")
    private @Nullable Output<String> addressType;

    /**
     * @return The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`. **NOTE:** From version 1.193.1, `address_type` can be modified.
     * 
     */
    public Optional<Output<String>> addressType() {
        return Optional.ofNullable(this.addressType);
    }

    /**
     * The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
     * 
     */
    @Import(name="deletionProtectionEnabled")
    private @Nullable Output<Boolean> deletionProtectionEnabled;

    /**
     * @return The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> deletionProtectionEnabled() {
        return Optional.ofNullable(this.deletionProtectionEnabled);
    }

    /**
     * The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
     * 
     */
    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    /**
     * @return The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
     * 
     */
    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to precheck the API request. Valid values: `true` and `false`.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The configuration of the billing method. See the following `Block load_balancer_billing_config`.
     * 
     */
    @Import(name="loadBalancerBillingConfig")
    private @Nullable Output<LoadBalancerLoadBalancerBillingConfigArgs> loadBalancerBillingConfig;

    /**
     * @return The configuration of the billing method. See the following `Block load_balancer_billing_config`.
     * 
     */
    public Optional<Output<LoadBalancerLoadBalancerBillingConfigArgs>> loadBalancerBillingConfig() {
        return Optional.ofNullable(this.loadBalancerBillingConfig);
    }

    /**
     * The edition of the ALB instance. Different editions have different limits and billing methods. Valid values: `Basic`, `Standard` and `StandardWithWaf`(Available in v1.193.1+).
     * 
     */
    @Import(name="loadBalancerEdition")
    private @Nullable Output<String> loadBalancerEdition;

    /**
     * @return The edition of the ALB instance. Different editions have different limits and billing methods. Valid values: `Basic`, `Standard` and `StandardWithWaf`(Available in v1.193.1+).
     * 
     */
    public Optional<Output<String>> loadBalancerEdition() {
        return Optional.ofNullable(this.loadBalancerEdition);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="loadBalancerName")
    private @Nullable Output<String> loadBalancerName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> loadBalancerName() {
        return Optional.ofNullable(this.loadBalancerName);
    }

    /**
     * Modify the Protection Configuration. See the following `Block modification_protection_config`.
     * 
     */
    @Import(name="modificationProtectionConfig")
    private @Nullable Output<LoadBalancerModificationProtectionConfigArgs> modificationProtectionConfig;

    /**
     * @return Modify the Protection Configuration. See the following `Block modification_protection_config`.
     * 
     */
    public Optional<Output<LoadBalancerModificationProtectionConfigArgs>> modificationProtectionConfig() {
        return Optional.ofNullable(this.modificationProtectionConfig);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource. **NOTE:** The Key of `tags` cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, &#34;https://&#34;, &#34;ack&#34; or &#34;ingress&#34;.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource. **NOTE:** The Key of `tags` cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, &#34;https://&#34;, &#34;ack&#34; or &#34;ingress&#34;.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The zones and vSwitches. You must specify at least two zones. See the following `Block zone_mappings`.
     * 
     */
    @Import(name="zoneMappings")
    private @Nullable Output<List<LoadBalancerZoneMappingArgs>> zoneMappings;

    /**
     * @return The zones and vSwitches. You must specify at least two zones. See the following `Block zone_mappings`.
     * 
     */
    public Optional<Output<List<LoadBalancerZoneMappingArgs>>> zoneMappings() {
        return Optional.ofNullable(this.zoneMappings);
    }

    private LoadBalancerState() {}

    private LoadBalancerState(LoadBalancerState $) {
        this.accessLogConfig = $.accessLogConfig;
        this.addressAllocatedMode = $.addressAllocatedMode;
        this.addressIpVersion = $.addressIpVersion;
        this.addressType = $.addressType;
        this.deletionProtectionEnabled = $.deletionProtectionEnabled;
        this.dnsName = $.dnsName;
        this.dryRun = $.dryRun;
        this.loadBalancerBillingConfig = $.loadBalancerBillingConfig;
        this.loadBalancerEdition = $.loadBalancerEdition;
        this.loadBalancerName = $.loadBalancerName;
        this.modificationProtectionConfig = $.modificationProtectionConfig;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
        this.zoneMappings = $.zoneMappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerState $;

        public Builder() {
            $ = new LoadBalancerState();
        }

        public Builder(LoadBalancerState defaults) {
            $ = new LoadBalancerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLogConfig The Access Logging Configuration Structure. See the following `Block access_log_config`.
         * 
         * @return builder
         * 
         */
        public Builder accessLogConfig(@Nullable Output<LoadBalancerAccessLogConfigArgs> accessLogConfig) {
            $.accessLogConfig = accessLogConfig;
            return this;
        }

        /**
         * @param accessLogConfig The Access Logging Configuration Structure. See the following `Block access_log_config`.
         * 
         * @return builder
         * 
         */
        public Builder accessLogConfig(LoadBalancerAccessLogConfigArgs accessLogConfig) {
            return accessLogConfig(Output.of(accessLogConfig));
        }

        /**
         * @param addressAllocatedMode The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder addressAllocatedMode(@Nullable Output<String> addressAllocatedMode) {
            $.addressAllocatedMode = addressAllocatedMode;
            return this;
        }

        /**
         * @param addressAllocatedMode The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder addressAllocatedMode(String addressAllocatedMode) {
            return addressAllocatedMode(Output.of(addressAllocatedMode));
        }

        /**
         * @param addressIpVersion The IP version. Valid values: `Ipv4`, `DualStack`.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(@Nullable Output<String> addressIpVersion) {
            $.addressIpVersion = addressIpVersion;
            return this;
        }

        /**
         * @param addressIpVersion The IP version. Valid values: `Ipv4`, `DualStack`.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(String addressIpVersion) {
            return addressIpVersion(Output.of(addressIpVersion));
        }

        /**
         * @param addressType The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`. **NOTE:** From version 1.193.1, `address_type` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder addressType(@Nullable Output<String> addressType) {
            $.addressType = addressType;
            return this;
        }

        /**
         * @param addressType The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`. **NOTE:** From version 1.193.1, `address_type` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder addressType(String addressType) {
            return addressType(Output.of(addressType));
        }

        /**
         * @param deletionProtectionEnabled The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(@Nullable Output<Boolean> deletionProtectionEnabled) {
            $.deletionProtectionEnabled = deletionProtectionEnabled;
            return this;
        }

        /**
         * @param deletionProtectionEnabled The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(Boolean deletionProtectionEnabled) {
            return deletionProtectionEnabled(Output.of(deletionProtectionEnabled));
        }

        /**
         * @param dnsName The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param dryRun Specifies whether to precheck the API request. Valid values: `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to precheck the API request. Valid values: `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param loadBalancerBillingConfig The configuration of the billing method. See the following `Block load_balancer_billing_config`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBillingConfig(@Nullable Output<LoadBalancerLoadBalancerBillingConfigArgs> loadBalancerBillingConfig) {
            $.loadBalancerBillingConfig = loadBalancerBillingConfig;
            return this;
        }

        /**
         * @param loadBalancerBillingConfig The configuration of the billing method. See the following `Block load_balancer_billing_config`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBillingConfig(LoadBalancerLoadBalancerBillingConfigArgs loadBalancerBillingConfig) {
            return loadBalancerBillingConfig(Output.of(loadBalancerBillingConfig));
        }

        /**
         * @param loadBalancerEdition The edition of the ALB instance. Different editions have different limits and billing methods. Valid values: `Basic`, `Standard` and `StandardWithWaf`(Available in v1.193.1+).
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEdition(@Nullable Output<String> loadBalancerEdition) {
            $.loadBalancerEdition = loadBalancerEdition;
            return this;
        }

        /**
         * @param loadBalancerEdition The edition of the ALB instance. Different editions have different limits and billing methods. Valid values: `Basic`, `Standard` and `StandardWithWaf`(Available in v1.193.1+).
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEdition(String loadBalancerEdition) {
            return loadBalancerEdition(Output.of(loadBalancerEdition));
        }

        /**
         * @param loadBalancerName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(@Nullable Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        /**
         * @param loadBalancerName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        /**
         * @param modificationProtectionConfig Modify the Protection Configuration. See the following `Block modification_protection_config`.
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionConfig(@Nullable Output<LoadBalancerModificationProtectionConfigArgs> modificationProtectionConfig) {
            $.modificationProtectionConfig = modificationProtectionConfig;
            return this;
        }

        /**
         * @param modificationProtectionConfig Modify the Protection Configuration. See the following `Block modification_protection_config`.
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionConfig(LoadBalancerModificationProtectionConfigArgs modificationProtectionConfig) {
            return modificationProtectionConfig(Output.of(modificationProtectionConfig));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. **NOTE:** The Key of `tags` cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, &#34;https://&#34;, &#34;ack&#34; or &#34;ingress&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. **NOTE:** The Key of `tags` cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, &#34;https://&#34;, &#34;ack&#34; or &#34;ingress&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcId The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param zoneMappings The zones and vSwitches. You must specify at least two zones. See the following `Block zone_mappings`.
         * 
         * @return builder
         * 
         */
        public Builder zoneMappings(@Nullable Output<List<LoadBalancerZoneMappingArgs>> zoneMappings) {
            $.zoneMappings = zoneMappings;
            return this;
        }

        /**
         * @param zoneMappings The zones and vSwitches. You must specify at least two zones. See the following `Block zone_mappings`.
         * 
         * @return builder
         * 
         */
        public Builder zoneMappings(List<LoadBalancerZoneMappingArgs> zoneMappings) {
            return zoneMappings(Output.of(zoneMappings));
        }

        /**
         * @param zoneMappings The zones and vSwitches. You must specify at least two zones. See the following `Block zone_mappings`.
         * 
         * @return builder
         * 
         */
        public Builder zoneMappings(LoadBalancerZoneMappingArgs... zoneMappings) {
            return zoneMappings(List.of(zoneMappings));
        }

        public LoadBalancerState build() {
            return $;
        }
    }

}
