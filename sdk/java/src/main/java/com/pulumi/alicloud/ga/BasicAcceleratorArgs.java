// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BasicAcceleratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final BasicAcceleratorArgs Empty = new BasicAcceleratorArgs();

    /**
     * Specifies whether to enable automatic payment. Default value: `false`. Valid values:
     * 
     */
    @Import(name="autoPay")
    private @Nullable Output<Boolean> autoPay;

    /**
     * @return Specifies whether to enable automatic payment. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> autoPay() {
        return Optional.ofNullable(this.autoPay);
    }

    /**
     * Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * The auto-renewal period. Unit: months. Default value: `1`. Valid values: `1` to `12`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
     * 
     */
    @Import(name="autoRenewDuration")
    private @Nullable Output<Integer> autoRenewDuration;

    /**
     * @return The auto-renewal period. Unit: months. Default value: `1`. Valid values: `1` to `12`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
     * 
     */
    public Optional<Output<Integer>> autoRenewDuration() {
        return Optional.ofNullable(this.autoRenewDuration);
    }

    /**
     * Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
     * 
     */
    @Import(name="autoUseCoupon")
    private @Nullable Output<String> autoUseCoupon;

    /**
     * @return Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
     * 
     */
    public Optional<Output<String>> autoUseCoupon() {
        return Optional.ofNullable(this.autoUseCoupon);
    }

    /**
     * The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
     * 
     */
    @Import(name="bandwidthBillingType")
    private @Nullable Output<String> bandwidthBillingType;

    /**
     * @return The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
     * 
     */
    public Optional<Output<String>> bandwidthBillingType() {
        return Optional.ofNullable(this.bandwidthBillingType);
    }

    /**
     * The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    @Import(name="basicAcceleratorName")
    private @Nullable Output<String> basicAcceleratorName;

    /**
     * @return The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public Optional<Output<String>> basicAcceleratorName() {
        return Optional.ofNullable(this.basicAcceleratorName);
    }

    /**
     * The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The subscription duration. Default value: `1`.
     * * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
     * * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return The subscription duration. Default value: `1`.
     * * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
     * * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
     * 
     */
    @Import(name="pricingCycle")
    private @Nullable Output<String> pricingCycle;

    /**
     * @return The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
     * 
     */
    public Optional<Output<String>> pricingCycle() {
        return Optional.ofNullable(this.pricingCycle);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private BasicAcceleratorArgs() {}

    private BasicAcceleratorArgs(BasicAcceleratorArgs $) {
        this.autoPay = $.autoPay;
        this.autoRenew = $.autoRenew;
        this.autoRenewDuration = $.autoRenewDuration;
        this.autoUseCoupon = $.autoUseCoupon;
        this.bandwidthBillingType = $.bandwidthBillingType;
        this.basicAcceleratorName = $.basicAcceleratorName;
        this.description = $.description;
        this.duration = $.duration;
        this.pricingCycle = $.pricingCycle;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BasicAcceleratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicAcceleratorArgs $;

        public Builder() {
            $ = new BasicAcceleratorArgs();
        }

        public Builder(BasicAcceleratorArgs defaults) {
            $ = new BasicAcceleratorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPay Specifies whether to enable automatic payment. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoPay(@Nullable Output<Boolean> autoPay) {
            $.autoPay = autoPay;
            return this;
        }

        /**
         * @param autoPay Specifies whether to enable automatic payment. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoPay(Boolean autoPay) {
            return autoPay(Output.of(autoPay));
        }

        /**
         * @param autoRenew Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewDuration The auto-renewal period. Unit: months. Default value: `1`. Valid values: `1` to `12`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(@Nullable Output<Integer> autoRenewDuration) {
            $.autoRenewDuration = autoRenewDuration;
            return this;
        }

        /**
         * @param autoRenewDuration The auto-renewal period. Unit: months. Default value: `1`. Valid values: `1` to `12`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(Integer autoRenewDuration) {
            return autoRenewDuration(Output.of(autoRenewDuration));
        }

        /**
         * @param autoUseCoupon Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUseCoupon(@Nullable Output<String> autoUseCoupon) {
            $.autoUseCoupon = autoUseCoupon;
            return this;
        }

        /**
         * @param autoUseCoupon Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUseCoupon(String autoUseCoupon) {
            return autoUseCoupon(Output.of(autoUseCoupon));
        }

        /**
         * @param bandwidthBillingType The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthBillingType(@Nullable Output<String> bandwidthBillingType) {
            $.bandwidthBillingType = bandwidthBillingType;
            return this;
        }

        /**
         * @param bandwidthBillingType The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthBillingType(String bandwidthBillingType) {
            return bandwidthBillingType(Output.of(bandwidthBillingType));
        }

        /**
         * @param basicAcceleratorName The name of the Global Accelerator Basic Accelerator instance.
         * 
         * @return builder
         * 
         */
        public Builder basicAcceleratorName(@Nullable Output<String> basicAcceleratorName) {
            $.basicAcceleratorName = basicAcceleratorName;
            return this;
        }

        /**
         * @param basicAcceleratorName The name of the Global Accelerator Basic Accelerator instance.
         * 
         * @return builder
         * 
         */
        public Builder basicAcceleratorName(String basicAcceleratorName) {
            return basicAcceleratorName(Output.of(basicAcceleratorName));
        }

        /**
         * @param description The description of the Global Accelerator Basic Accelerator instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Global Accelerator Basic Accelerator instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param duration The subscription duration. Default value: `1`.
         * * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
         * * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The subscription duration. Default value: `1`.
         * * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
         * * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param pricingCycle The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
         * 
         * @return builder
         * 
         */
        public Builder pricingCycle(@Nullable Output<String> pricingCycle) {
            $.pricingCycle = pricingCycle;
            return this;
        }

        /**
         * @param pricingCycle The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
         * 
         * @return builder
         * 
         */
        public Builder pricingCycle(String pricingCycle) {
            return pricingCycle(Output.of(pricingCycle));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        public BasicAcceleratorArgs build() {
            return $;
        }
    }

}
