// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.adb.DBClusterLakeVersionArgs;
import com.pulumi.alicloud.adb.inputs.DBClusterLakeVersionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
 * 
 * For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/latest/api-doc-adb-2021-12-01-api-doc-createdbcluster).
 * 
 * &gt; **NOTE:** Available since v1.190.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersion;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         final var zoneId = defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids())[defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids()).length() - 1];
 * 
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;10.4.0.0/16&#34;)
 *             .build());
 * 
 *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock(&#34;10.4.0.0/24&#34;)
 *             .zoneId(zoneId)
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultDBClusterLakeVersion = new DBClusterLakeVersion(&#34;defaultDBClusterLakeVersion&#34;, DBClusterLakeVersionArgs.builder()        
 *             .computeResource(&#34;16ACU&#34;)
 *             .dbClusterVersion(&#34;5.0&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .storageResource(&#34;24ACU&#34;)
 *             .enableDefaultResourceGroup(false)
 *             .vswitchId(defaultSwitch.id())
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(zoneId)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion")
public class DBClusterLakeVersion extends com.pulumi.resources.CustomResource {
    /**
     * The name of the service.
     * 
     */
    @Export(name="commodityCode", type=String.class, parameters={})
    private Output<String> commodityCode;

    /**
     * @return The name of the service.
     * 
     */
    public Output<String> commodityCode() {
        return this.commodityCode;
    }
    /**
     * The computing resources of the cluster.
     * 
     */
    @Export(name="computeResource", type=String.class, parameters={})
    private Output<String> computeResource;

    /**
     * @return The computing resources of the cluster.
     * 
     */
    public Output<String> computeResource() {
        return this.computeResource;
    }
    /**
     * The endpoint of the cluster.
     * 
     */
    @Export(name="connectionString", type=String.class, parameters={})
    private Output<String> connectionString;

    /**
     * @return The endpoint of the cluster.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * The createTime of the cluster.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The createTime of the cluster.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The description of the cluster.
     * 
     */
    @Export(name="dbClusterDescription", type=String.class, parameters={})
    private Output<String> dbClusterDescription;

    /**
     * @return The description of the cluster.
     * 
     */
    public Output<String> dbClusterDescription() {
        return this.dbClusterDescription;
    }
    /**
     * The version of the cluster. Value options: `5.0`.
     * 
     */
    @Export(name="dbClusterVersion", type=String.class, parameters={})
    private Output<String> dbClusterVersion;

    /**
     * @return The version of the cluster. Value options: `5.0`.
     * 
     */
    public Output<String> dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * Whether to enable default allocation of resources to user_default resource groups.
     * 
     */
    @Export(name="enableDefaultResourceGroup", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableDefaultResourceGroup;

    /**
     * @return Whether to enable default allocation of resources to user_default resource groups.
     * 
     */
    public Output<Optional<Boolean>> enableDefaultResourceGroup() {
        return Codegen.optional(this.enableDefaultResourceGroup);
    }
    /**
     * The engine of the database.
     * 
     */
    @Export(name="engine", type=String.class, parameters={})
    private Output<String> engine;

    /**
     * @return The engine of the database.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * The engine version of the database.
     * 
     */
    @Export(name="engineVersion", type=String.class, parameters={})
    private Output<String> engineVersion;

    /**
     * @return The engine version of the database.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * The time when the cluster expires.
     * 
     */
    @Export(name="expireTime", type=String.class, parameters={})
    private Output<String> expireTime;

    /**
     * @return The time when the cluster expires.
     * 
     */
    public Output<String> expireTime() {
        return this.expireTime;
    }
    /**
     * Indicates whether the cluster has expired.
     * 
     */
    @Export(name="expired", type=String.class, parameters={})
    private Output<String> expired;

    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    public Output<String> expired() {
        return this.expired;
    }
    /**
     * The lock mode of the cluster.
     * 
     */
    @Export(name="lockMode", type=String.class, parameters={})
    private Output<String> lockMode;

    /**
     * @return The lock mode of the cluster.
     * 
     */
    public Output<String> lockMode() {
        return this.lockMode;
    }
    /**
     * The reason why the cluster is locked.
     * 
     */
    @Export(name="lockReason", type=String.class, parameters={})
    private Output<String> lockReason;

    /**
     * @return The reason why the cluster is locked.
     * 
     */
    public Output<String> lockReason() {
        return this.lockReason;
    }
    /**
     * The payment type of the resource. Valid values are `PayAsYouGo`.
     * 
     */
    @Export(name="paymentType", type=String.class, parameters={})
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource. Valid values are `PayAsYouGo`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The port that is used to access the cluster.
     * 
     */
    @Export(name="port", type=String.class, parameters={})
    private Output<String> port;

    /**
     * @return The port that is used to access the cluster.
     * 
     */
    public Output<String> port() {
        return this.port;
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", type=String.class, parameters={})
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     * 
     */
    @Export(name="securityIps", type=String.class, parameters={})
    private Output<String> securityIps;

    /**
     * @return The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     * 
     */
    public Output<String> securityIps() {
        return this.securityIps;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The storage resources of the cluster.
     * 
     */
    @Export(name="storageResource", type=String.class, parameters={})
    private Output<String> storageResource;

    /**
     * @return The storage resources of the cluster.
     * 
     */
    public Output<String> storageResource() {
        return this.storageResource;
    }
    /**
     * The vpc ID of the resource.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The vpc ID of the resource.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of the vSwitch.
     * 
     */
    @Export(name="vswitchId", type=String.class, parameters={})
    private Output<String> vswitchId;

    /**
     * @return The ID of the vSwitch.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }
    /**
     * The zone ID of the resource.
     * 
     */
    @Export(name="zoneId", type=String.class, parameters={})
    private Output<String> zoneId;

    /**
     * @return The zone ID of the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DBClusterLakeVersion(String name) {
        this(name, DBClusterLakeVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DBClusterLakeVersion(String name, DBClusterLakeVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DBClusterLakeVersion(String name, DBClusterLakeVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion", name, args == null ? DBClusterLakeVersionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DBClusterLakeVersion(String name, Output<String> id, @Nullable DBClusterLakeVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DBClusterLakeVersion get(String name, Output<String> id, @Nullable DBClusterLakeVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DBClusterLakeVersion(name, id, state, options);
    }
}
