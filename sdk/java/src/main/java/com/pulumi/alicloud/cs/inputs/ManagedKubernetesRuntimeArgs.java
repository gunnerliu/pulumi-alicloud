// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKubernetesRuntimeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKubernetesRuntimeArgs Empty = new ManagedKubernetesRuntimeArgs();

    /**
     * This parameter specifies the name of the component.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return This parameter specifies the name of the component.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ManagedKubernetesRuntimeArgs() {}

    private ManagedKubernetesRuntimeArgs(ManagedKubernetesRuntimeArgs $) {
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKubernetesRuntimeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKubernetesRuntimeArgs $;

        public Builder() {
            $ = new ManagedKubernetesRuntimeArgs();
        }

        public Builder(ManagedKubernetesRuntimeArgs defaults) {
            $ = new ManagedKubernetesRuntimeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name This parameter specifies the name of the component.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name This parameter specifies the name of the component.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param version Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ManagedKubernetesRuntimeArgs build() {
            return $;
        }
    }

}
