// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.alb.ListenerAclAttachmentArgs;
import com.pulumi.alicloud.alb.inputs.ListenerAclAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Application Load Balancer (ALB) Listener Acl Attachment resource.
 * 
 * For information about Application Load Balancer (ALB) Listener Acl Attachment and how to use it, see [What is Listener Acl Attachment](https://www.alibabacloud.com/help/en/server-load-balancer/latest/associateaclswithlistener).
 * 
 * &gt; **NOTE:** Available since v1.163.0.
 * 
 * &gt; **NOTE:** You can associate at most three ACLs with a listener.
 * 
 * &gt; **NOTE:** You can only configure either a whitelist or a blacklist for listener, not at the same time.
 * 
 * ## Import
 * 
 * Application Load Balancer (ALB) Listener Acl Attachment can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:alb/listenerAclAttachment:ListenerAclAttachment example &lt;listener_id&gt;:&lt;acl_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:alb/listenerAclAttachment:ListenerAclAttachment")
public class ListenerAclAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Acl.
     * 
     */
    @Export(name="aclId", type=String.class, parameters={})
    private Output<String> aclId;

    /**
     * @return The ID of the Acl.
     * 
     */
    public Output<String> aclId() {
        return this.aclId;
    }
    /**
     * The type of the ACL. Valid values:
     * - White: a whitelist. Only requests from the IP addresses or CIDR blocks in the ACL are forwarded. The whitelist applies to scenarios in which you want to allow only specific IP addresses to access an application. Risks may arise if you specify an ACL as a whitelist. After a whitelist is configured, only IP addresses in the whitelist can access the Application Load Balancer (ALB) listener. If you enable a whitelist but the whitelist does not contain an IP address, the listener forwards all requests.
     * - Black: a blacklist. All requests from the IP addresses or CIDR blocks in the ACL are blocked. The blacklist applies to scenarios in which you want to block access from specific IP addresses to an application. If you enable a blacklist but the blacklist does not contain an IP address, the listener forwards all requests.
     * 
     */
    @Export(name="aclType", type=String.class, parameters={})
    private Output<String> aclType;

    /**
     * @return The type of the ACL. Valid values:
     * - White: a whitelist. Only requests from the IP addresses or CIDR blocks in the ACL are forwarded. The whitelist applies to scenarios in which you want to allow only specific IP addresses to access an application. Risks may arise if you specify an ACL as a whitelist. After a whitelist is configured, only IP addresses in the whitelist can access the Application Load Balancer (ALB) listener. If you enable a whitelist but the whitelist does not contain an IP address, the listener forwards all requests.
     * - Black: a blacklist. All requests from the IP addresses or CIDR blocks in the ACL are blocked. The blacklist applies to scenarios in which you want to block access from specific IP addresses to an application. If you enable a blacklist but the blacklist does not contain an IP address, the listener forwards all requests.
     * 
     */
    public Output<String> aclType() {
        return this.aclType;
    }
    /**
     * The ID of the ALB listener.
     * 
     */
    @Export(name="listenerId", type=String.class, parameters={})
    private Output<String> listenerId;

    /**
     * @return The ID of the ALB listener.
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }
    /**
     * The status of the Listener Acl Attachment.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the Listener Acl Attachment.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ListenerAclAttachment(String name) {
        this(name, ListenerAclAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ListenerAclAttachment(String name, ListenerAclAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ListenerAclAttachment(String name, ListenerAclAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/listenerAclAttachment:ListenerAclAttachment", name, args == null ? ListenerAclAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ListenerAclAttachment(String name, Output<String> id, @Nullable ListenerAclAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/listenerAclAttachment:ListenerAclAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ListenerAclAttachment get(String name, Output<String> id, @Nullable ListenerAclAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ListenerAclAttachment(name, id, state, options);
    }
}
